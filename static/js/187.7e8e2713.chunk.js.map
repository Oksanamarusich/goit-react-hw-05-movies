{"version":3,"file":"static/js/187.7e8e2713.chunk.js","mappings":"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","sources":["components/ErrorMessage.js","components/ListMovies/ListMovies.styled.js","components/ListMovies/ListMovies.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.js","components/SearchMovies/SearchMovies.styled.js","components/SearchMovies/SearchMovies.jsx","pages/Movies/Movies.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ErrorMessage = styled.b`\n  color: ${p => p.theme.colors.error};\n`;","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\nmargin-bottom: 10px;\n`;\n\nexport const LinkItem = styled(Link)`\ntext-decoration: none;\ncolor:${props => props.theme.colors.black};\nfont-size: 20px;\nfont-weight: bold;\n&:hover {\n    color: ${props => props.theme.colors.orange};\n    text-decoration:underline;\n}\n`","import { useLocation } from 'react-router-dom';\nimport { Item, LinkItem } from 'components/ListMovies/ListMovies.styled';\n\nexport const ListMovies = ({ movies }) => {\n    const location = useLocation();\n    \n    return (\n        <div>\n           \n            <ul>\n                {movies.map(movie => (\n                    <Item key={movie.id}>\n                        <LinkItem to={`/movies/${movie.id}`} state={{ from: location }}>{movie.title}</LinkItem></Item>\n                ))}\n                \n            </ul>\n        </div>\n    )\n};","import styled from 'styled-components';\n\nexport const ContainerLoader = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\n`;\n\n","import { RotatingLines } from 'react-loader-spinner';\nimport {ContainerLoader} from 'components/Loader/Loader.styled'\n\nexport const Loader = () => {\n    return <ContainerLoader>\n        <RotatingLines\n           strokeColor=\"grey\"\n           strokeWidth=\"5\"\n           animationDuration=\"0.75\"\n           width=\"96\"\n           visible={true}\n          />\n    </ContainerLoader>\n}","import styled from 'styled-components';\n\nexport const SearchContainer = styled.div`\npadding: 80px 0 20px 40px;\n`\nexport const SearchInput = styled.input`\nwidth: 50%;\n    height: 46px;\n    line-height: 46px;\n    font-size: 1.1em;\n    color: rgba(0,0,0,0.5);\n    border:1px solid ${props => props.theme.colors.blue};\n    border-radius: 30px;\n    padding: 10px 20px;\n    outline: 0;\n   \n`;\n\nexport const Button = styled.button`\nwidth: 100px;\n height: 46px;\n    line-height: 46px;\n    font-size: 1.1em;\n    background-color: ${props => props.theme.colors.blue};\n    border-radius: 30px;\n    color:${props => props.theme.colors.white};\n    cursor: pointer;\n    border: 1px solid  ${props => props.theme.colors.blue};\n    &:hover{\n        background-color: ${props => props.theme.colors.orange};\n        border: 1px solid  ${props => props.theme.colors.orange};\n        \n    }\n\n`\n","import {SearchContainer, SearchInput, Button} from 'components/SearchMovies/SearchMovies.styled'\n\nexport const SearchMovies = ({value,  onSubmit}) => {\n    \n   \n    return (<SearchContainer>\n        <form onSubmit = {onSubmit}>\n            <SearchInput type=\"text\"\n                name=\"value\"\n                />\n        <Button type = \"submit\" >Search</Button>\n     </form>\n       \n        \n    </SearchContainer>)\n}","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { SearchMovies } from 'components/SearchMovies/SearchMovies';\nimport toast from 'react-hot-toast';\nimport { fetchWord } from '../../services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport { ErrorMessage } from 'components/ErrorMessage';\nimport { ListMovies } from 'components/ListMovies/ListMovies';\n\n\nexport default function Movies() {\n    const [params, setParams] = useSearchParams();\n    const value = params.get('value') ?? '';\n    const [movies, setMovies] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n   useEffect(() => {\n        if (value === '') {\n          \n            return;\n    }\n        async function searchWord() {\n             setLoading(true);\n             setError(false);\n           \n            try {\n\n                const movies = await fetchWord(value);\n            \n                setMovies(movies);\n                \n                 if (movies.length === 0) {\n                     return toast.success('Sorry, no movies found.');\n                };\n                \n           \n            } catch (error) {\n        \n                 setError(true);\n                \n            } finally {\n        \n                 setLoading(false);\n      }\n    };\n        searchWord();\n    }, [value]);\n\n    \n const handleSubmit = e => {\n    e.preventDefault();\n     const form = e.currentTarget;\n    \n        setParams({ value: form.elements.value.value });\n        if (form.elements.value.value === '') {\n            return toast.success('Please, enter a word to search for. ');\n     }\n     \n    };\n    \n    \n    return (<div>\n         {loading && <Loader />}\n         {error && (\n          <ErrorMessage>Whoops! Error! Please reload this page!</ErrorMessage>\n        )} \n        <SearchMovies\n            onSubmit={handleSubmit}\n            value={value}\n            \n         />\n         <ListMovies movies={movies} /> \n        \n    </div>)\n}","import axios from 'axios';\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a374ad49295f660bd4b75eba44704cf2';\n\nexport const  fetchTrending = async () => {\n  const  {data}  = await axios.get('trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US'\n      \n    },\n  });\n  \n  return data.results;\n};\n \n// пошук за  словом\n\nexport const fetchWord = async (value) => {\n  const { data } = await axios.get('search/movie', {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query: `${value}`\n    }\n  });\n  \n  return data.results;\n};\n\n\n//card movie\n\nexport const fetchMovie = async (movieId) => {\n  const { data } = await axios.get(`movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US'\n     \n    }\n  });\n  \n  return data;\n};\n\n  // cast\n\nexport const fetchCast = async (movieId) => {\n  const { data } = await axios.get(`movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US'\n     \n    }\n  });\n  \n  return data.cast;\n};\n\n  // Reviews\n\nexport const fetchReviews = async (movieId) => {\n  const { data } = await axios.get(`movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US'\n     \n    }\n  });\n  \n  return data.results;\n};"],"names":["ErrorMessage","styled","p","theme","colors","error","Item","LinkItem","Link","props","black","orange","ListMovies","movies","location","useLocation","map","movie","to","id","state","from","title","ContainerLoader","Loader","strokeColor","strokeWidth","animationDuration","width","visible","SearchContainer","SearchInput","blue","Button","white","SearchMovies","value","onSubmit","type","name","Movies","useSearchParams","params","setParams","get","useState","setMovies","loading","setLoading","setError","useEffect","fetchWord","length","toast","searchWord","e","preventDefault","form","currentTarget","elements","axios","API_KEY","fetchTrending","api_key","language","data","results","query","fetchMovie","movieId","fetchCast","cast","fetchReviews"],"sourceRoot":""}