{"version":3,"file":"static/js/387.16b5b31f.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/ErrorMessage.js","components/Loader/Loader.styled.js","components/Loader/Loader.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.ul`\ndisplay: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const Card = styled.li`\nwidth: calc((100% - 90px) / 10);\n  padding-bottom: 10px;\n  text-align: center;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  border-radius: 8px;\n  `;\n\n  \n\nexport const Title = styled.h3`\nfont-size: 14px;\n`;\n\nexport const Text = styled.p`\nfont-size: 14px;\n`;","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport { ErrorMessage } from 'components/ErrorMessage';\nimport { fetchCast } from 'services/api';\n\nimport { Container, Card, Title, Text } from 'components/Cast/Cast.styled';\n\nexport default function Cast() {\n\n    const params = useParams();\n    const [cast, setCast] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700'\n\n    useEffect(() => {\n         if (!params.movieId) {\n            return;\n        };\n\n        async function getCast() {\n            setLoading(true);\n             setError(false);\n            try {\n                const cast = await fetchCast(params.movieId, params.cast);\n                console.log('Cast', cast);\n                setCast(cast);\n            } catch (error) {\n        \n                 setError(true);\n                \n            } finally {\n        \n                 setLoading(false);\n      }\n        };\n        getCast();\n    }, [params.movieId, params.cast]);\n\n\n    return (\n        <div>\n             {loading && <Loader />}\n         {error && (\n          <ErrorMessage>Whoops! Error! Please reload this page!</ErrorMessage>\n        )} \n            <Container>\n                {cast.map(elem => (\n                    <Card key={elem.id}>\n                            \n                            <img src={`https://image.tmdb.org/t/p/w500${elem.profile_path}`|| defaultImg} width={300} height={100} alt={elem.name} />\n                            <Title>{elem.name}</Title>\n                            <Text>Character: {elem.character}</Text>\n                        \n                        \n\n                    </Card>\n                ))}\n                \n        </Container>\n               \n            \n      </div>\n    )\n}\n\n\n","import styled from 'styled-components';\n\nexport const ErrorMessage = styled.b`\n  color: ${p => p.theme.colors.error};\n`;","import styled from 'styled-components';\n\nexport const ContainerLoader = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\n`;\n\n","import { RotatingLines } from 'react-loader-spinner';\nimport {ContainerLoader} from 'components/Loader/Loader.styled'\n\nexport const Loader = () => {\n    return <ContainerLoader>\n        <RotatingLines\n           strokeColor=\"grey\"\n           strokeWidth=\"5\"\n           animationDuration=\"0.75\"\n           width=\"96\"\n           visible={true}\n          />\n    </ContainerLoader>\n}","import axios from 'axios';\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a374ad49295f660bd4b75eba44704cf2';\n\nexport const  fetchTrending = async () => {\n  const  {data}  = await axios.get('trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US'\n      \n    },\n  });\n  \n  return data.results;\n  \n};\n \n// пошук за ключовим словом\n\nexport const fetchWord = async (value)=> {\n  const { data } = await axios.get('search/movie', {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query:`${value}`\n    }\n  });\n  console.log('VALUE', data.results)\n  return data.results;\n\n}\n\n\n//information about film\n\n  export const fetchMovie = async (movieId)=> {\n  const { data } = await axios.get(`movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US'\n     \n    }\n  });\n  \n  return data;\n\n}\n\n  // cast\n\nexport const fetchCast = async (movieId)=> {\n  const { data } = await axios.get(`movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US'\n     \n    }\n  });\n  console.log('fetchCast', data.cast);\n  return data.cast;\n\n}\n\n  // Reviews\n\nexport const fetchReviews = async (movieId)=> {\n  const { data } = await axios.get(`movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US'\n     \n    }\n  });\n  console.log('fetchReviews', data.results);\n  return data.results;\n\n}"],"names":["Container","styled","Card","Title","Text","Cast","params","useParams","useState","cast","setCast","loading","setLoading","error","setError","useEffect","fetchCast","movieId","console","log","getCast","Loader","ErrorMessage","map","elem","src","profile_path","defaultImg","width","height","alt","name","character","id","p","theme","colors","ContainerLoader","strokeColor","strokeWidth","animationDuration","visible","axios","API_KEY","fetchTrending","api_key","language","data","results","fetchWord","value","query","fetchMovie","fetchReviews"],"sourceRoot":""}